@model IEnumerable<DynamicData.Models.Organization>
<div class="card card-default">
    <div class="card-header card-warning card-outline">
        <h3 class="card-title" id="viewCardTitle">
            Organizations
        </h3>
        <div class="card-tools">
            @*<button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                    <i class="fas fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                    <i class="fas fa-times"></i>
                </button>*@
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-12">
                <table id="OranizationTable" class="table table-striped table-bordered" cellspacing="0" width="100%">
                    <thead><tr></tr></thead>
                </table>
                <table>
                    <tr><td height="10" width="10" class="editdisable" style="padding:0.1rem"></td><td width="5"></td><td><b> *note: none edit cell</b></td><td></td><td height="10" width="10" class="editdisable"></td></tr>
                </table>
            </div>

        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $.fn.dataTable.moment('MM/DD/YYYY');
            $.fn.dataTable.moment('D-MMM-YY');
            initialDataTable();

        });

        var editCellUrl = "@Url.Action("UpdateOrganizationCell", "Admin")";
        function initialDataTable() {
            $('#OranizationTable thead tr').empty();
              editor = new $.fn.dataTable.Editor({
                ajax:
                {
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    create: {
                        type: 'POST',
                        url: editCellUrl,
                        success: function (res) {
                            if (res.status) {
                                toastr.success(res.message);
                                $('#OranizationTable').DataTable().ajax.reload();
                            }
                        }
                    },
                      edit: {
                        type: 'POST',
                              url: editCellUrl,
                              data: function(data) {
                                //  console.log(data)
                              },
                          success: function (res) {

                              if (res.status != 'noaction') {
                                  if (res.status) {
                                      $('#OranizationTable').DataTable().ajax.reload();
                                      toastr.success(res.message);
                                  }
                                  else {
                                      toastr.error(res.message);
                                  }
                              }
                        }
                    },
                    remove: {
                        type: 'POST',
                        url: editCellUrl,
                        success: function (res) {
                            $('#OranizationTable').DataTable().ajax.reload();
                            toastr.success(res.message);
                        }
                    },
                },
                idSrc: 'id',
                  table: "#OranizationTable",
                  fields: [
                      {
                          label: "Name:",
                          name: "name",
                      },
                      {
                      label: "Address:",
                      name: "address"
                      },
                      {
                      label: "City:",
                          name: "city"
                      },
                      {
                      label: "States:",
                          name: "states",
                          "type": "select",
                          "options": GetAjaxNoParameters("@Url.Action("GetListStates", "Admin")").states,
                      },
                      {
                      label: "Zip:",
                        name: "zip"
                      }
                      ,
                      {
                          label: "Email:",
                          name: "email"
                      },
                      {
                          label: "Phone:",
                          name: "phone"
                      },
                      {
                          label: "POC First Name:",
                          name: "poC_FirstName"
                      },
                      {
                          label: "POC Last Name:",
                          name: "poC_LastName"
                      }
                  ]
              });


            OranizationTable = $('#OranizationTable').DataTable({
                //fixedHeader: true,
                scrollY:650,
                //colReorder: colReorder,
                //"ordering": isSorted,
                "ordering": true,
                //stateSave: true,
                "aLengthMenu": [[25, 50, 100, -1], [ 25, 50, 100, "All"]],
                "language": {
                    "emptyTable": "No data available in table"
                },
                dom: "Blfrtip",
                    columns: [
                        {
                            data: "id",
                            orderable: false,
                            render: function (data, type, row, meta) {
                                var checkRoles = "";
                                $.each(row.userroles, function (key, value) {
                                    checkRoles += value.id + ",";
                                });
                                var dropList = "<div class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">";
                                dropList += "<a class=\"dropdown-item\" href=\"@Url.Action("UserOrganization","Admin")\" ><i class=\"fas fa-list\" ></i> View Users</a>";
                                dropList += "<div class=\"dropdown-divider\"></div>";
                                dropList += "<a class=\"dropdown-item btn_removerow\" href=\"#\" onclick=\"deleteUser(this)\"><i class=\"fas fa-trash\" ></i> Delete</a>";
                                dropList +="</div>";
                                return "<button type=\"button\" class=\"btn btn-outline-danger btn-sm dropdown-toggle dropdown-hover\" data-toggle=\"dropdown\" aria-expanded=\"true\"><i class=\"fa fa-sm fa-list\"></i> Action</button>" + dropList;
                            },
                            width:70
                        },
                        { title:"Name",data: "name" },
                        { title: "Address",data: "address" },
                        { title: "City",data: "city" },
                        { title: "State",data: "states" },
                        { title: "Zip", data: "zip" },
                        {
                            title: "Email", "data": "email"
                        },
                        {
                            title: "Phone", "data": "phone"
                        }
                        ,
                        {
                            title: "POC First Name", "data": "poC_FirstName"
                        },
                        {
                            title: "POC Last Name", "data": "poC_LastName"
                        }

                    ],
                keys: {
                   // columns: ':not(:first-child):not(:nth-child(2))',
                    columns: ':not(:first-child)',
                    editor: editor
                },
                aaSorting: [[1,"asc"]],

                select: {
                    style: 'os',
                    selector: 'td:first-child',
                    blurable: true
                 },
                buttons: [
                    {
                        extend: "print",
                        exportOptions: {
                            columns: ':visible:not(:first-child)',
                            format: {
                                header: function (data, columnIdx) {
                                    if (columnIdx == 1) {
                                        return 'column_1_header';
                                    }
                                    else {
                                        return data;
                                    }
                                }
                            }
                            // columns: 'th:not(:last-child)'
                        }
                    },
                    {
                        extend: "pdfHtml5",
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        exportOptions: {
                            columns: ':visible:not(:first-child)',
                            format: {
                                header: function (data, columnIdx) {
                                    if (columnIdx == 1) {
                                        return 'column_1_header';
                                    }
                                    else {
                                        return data;
                                    }
                                }
                            }
                            // columns: 'th:not(:last-child)'
                        }
                    },
                    ,
                    {
                        extend: "excel",
                        exportOptions: {
                            columns: ':visible:not(:first-child)',
                            format: {
                                header: function (data, columnIdx) {
                                    if (columnIdx == 1) {
                                        return 'column_1_header';
                                    }
                                    else {
                                        return data;
                                    }
                                }
                            }
                            // columns: 'th:not(:last-child)'
                        }
                    },

                    { extend: "create", editor: editor },

                 ],
                "createdRow": function (row, data, index) {
                    //set button column

                 },
                 "drawCallback": function () {
                     $("#viewData tr th:first").removeClass("sorting_asc");
                },
                "rowCallback": function (row, data, index) {


                },
                "initComplete": function (settings, json) {

                },
                ajax: '@Url.Action("LoadOrganizationsData", "Admin")',
            });



            $(".buttons-create").removeClass("dt-button buttons-create").addClass("btn  btn-outline-primary").html("<i class=\"fa fa-plus\"></i> <span> New Record</span>");
            $(".buttons-print").removeClass("dt-button buttons-print").addClass("btn  btn-outline-secondary").html("<i class=\"fa fa-print\"></i> <span>Print</span>");
            $(".buttons-excel").removeClass("dt-button buttons-excel").addClass("btn  btn-outline-success").html("<i class=\"fas fa-file-excel\"></i> <span>Excel</span>");
            $(".buttons-pdf").removeClass("dt-button buttons-pdf").addClass("btn  btn-outline-danger").html("<i class=\"fas fas fa-file-pdf\"></i> <span>PDF</span>");

        }

        function GetAjaxNoParameters(url) {
            var result;
            $.ajax({
                url: url,
                type: "Get",
                async: false,
                datatype: "json",
                success: function (res) {
                    result = res;
                }
            })
            return result;
        }
    </script>
}
